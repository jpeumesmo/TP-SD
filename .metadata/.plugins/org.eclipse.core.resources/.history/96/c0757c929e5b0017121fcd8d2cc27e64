import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.ServerSocket;
import java.net.Socket;

public class ServidorConexao implements Runnable{

	//ATRIBUTOS
	private static ServerSocket servidor;
	private Socket cliente;
	private int porta = 5000;
	
	public ServidorConexao(Socket cliente){
		servidor = new ServerSocket(porta);
		System.out.println("Servidor ouvindo a porta "+ porta);
		
		while(true){
			Socket cliente = servidor.accept();
			System.out.println("Conectado");
			new Thread(new ServidorConexao(this.porta,)).start();
		}
	}
	
	
	public void run(){
		try {
			
			Socket cliente;
				
			//VARIAVEIS DE COMUNICACAO
			DataInputStream tipoOperacao = new DataInputStream(cliente.getInputStream());
			ObjectInputStream objetoRecebido = new ObjectInputStream(cliente.getInputStream());
			ObjectOutputStream objetoEnviado = new ObjectOutputStream(cliente.getOutputStream());
			DataOutputStream resposta = new DataOutputStream(cliente.getOutputStream());

			//VARIAVEIS PARA RECEBER E ENVIAR ARQUIVOS
			byte[] buffer = new byte[4096];//buffer de 4kb
			int len = 0;
			
			while (true){
				switch (tipoOperacao.readInt()){

				//OPERACAO DE LOGAR
				case 0:
					
					break;
				//OPERACAO	
				case 1:
					
					break;
				default:
					//ENVIAR OPERACAO INVALIDA
					System.out.println("Operacao Invalida");
					break;
			}
		}
		catch(Exception e) {
			System.out.println("Erro: " + e.getMessage());
		}
		finally {
			System.out.println("Conexao fechada\n");
		} 
	}
}